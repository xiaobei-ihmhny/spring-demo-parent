buildscript {
    repositories {
        jcenter()
    }
    /* 配置 tomcat 插件 */
    /* 此插件运行结束后其所用的java 进程不会自动结束，需要手动终止 */
    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.5'
    }
}

plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE' apply false
/* 应用 tomcat 插件 */
    id "com.bmuschko.tomcat" version "2.5"
}

apply plugin: 'war'
group 'com.xiaobei.springmvc.demo'
version '1.0-SNAPSHOT'

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'org.springframework:spring-webmvc'
    implementation 'org.springframework:spring-test'
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api'
    def tomcatVersion = '9.0.1'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:9.0.0.M6",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}
configurations {
    provided
}
sourceSets {
    main{
        //引入资源文件，打包时才会将配置文件植入war文件
        resources.srcDirs = ["src/main/java"]
    }
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

tomcat {
    httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
    ajpProtocol  = 'org.apache.coyote.ajp.AjpNio2Protocol'
    httpPort = 8090
    enableSSL = false
    daemon = false
}
/* TODO 不知道为何无法访问？ */
tomcatRun {
    reloadable = true
    daemon = false
    contextPath = '/'
}
/* TODO 目前 reloadable 仍无法生效 */
tomcatRunWar {
    reloadable = true
    daemon = false
    contextPath = '/'
}

configure(allprojects) { project ->
    /* 添加 dependencyManagement 插件 */
    apply plugin: "io.spring.dependency-management"
    /* 所有子模块的仓库配置 */
    repositories {
        mavenLocal()
        mavenCentral()
    }
    /* 配置项目编码为 utf-8 */
    tasks.withType(JavaCompile) {
        options.encoding("UTF-8")
    }
    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'
    dependencyManagement {
        // TODO 报错！！！
        imports {
            mavenBom "org.springframework:spring-framework-bom:5.3.2"
        }
        dependencies {
            /* junit5 测试相关 */
            dependencySet(group: 'org.junit.jupiter', version: '5.7.0') {
                entry 'junit-jupiter'
                entry 'junit-jupiter-api'
                entry 'junit-jupiter-engine'
                entry 'junit-jupiter-params'
            }
            dependency group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
        }
    }
}